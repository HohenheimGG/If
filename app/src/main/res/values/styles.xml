<resources>
    <!-- Application Theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!--导航栏-->
        <item name="colorPrimary">@color/theme_main</item>
        <!--状态栏底色）-->
        <item name="colorPrimaryDark">@color/transparents</item>
        <!--各控制元件(如：check box、switch 或是 radoi) 被勾选 (checked) 或是选定 (selected) 的颜色-->
        <item name="colorAccent">@color/colorAccent</item>
        <!--右上角三个圆点的颜色-->
        <item name="android:textColorSecondary">@color/white</item>
    </style>

    <style name="Transparent" parent="android:style/Theme.Dialog">
        <item name="android:windowBackground">@color/transparent_background</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsTranslucent">true</item>
    </style>

    <!--View theme-->
    <style name="tool_bar_style" parent="@style/ThemeOverlay.AppCompat.Light">
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item> <!--新增一个item，用于控制menu-->
    </style>

    <!--Menu theme-->
    <style name="OverflowMenuStyle" parent="Widget.AppCompat.Light.PopupMenu.Overflow">
        <item name="overlapAnchor">false</item>  <!--把该属性改为false即可使menu位置位于toolbar之下-->
    </style>

    <!--定制化组件属性-->
    <!--IFToolBar属性-->
    <declare-styleable name="IFToolBar">
        <!--声明我们的属性，名称为default_size,取值类型为尺寸类型（dp,px等）-->
        <attr name="start_color" format="color"/>
        <attr name="end_color" format="color"/>

    </declare-styleable>

</resources>
